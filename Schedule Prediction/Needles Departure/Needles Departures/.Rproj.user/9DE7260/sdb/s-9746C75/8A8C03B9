{
    "collab_server" : "",
    "contents" : "detach(\"package:plyr\", unload=TRUE) \nlibrary(dplyr)\nlibrary(tidyr)\ndir = \"H:/Schedule Prediction/Needles Departure/Needles Departures/Needles_only_Code/+3 Day/Part 1 Files/\"\n\nAllData=readRDS(paste0(dir,'Proceesed_data_3Day.RDS'))\n\nactuals=AllData %>% filter(Actual ==1) %>%group_by(EVT_DT,Departure_Time_Bucket._act) %>% summarise(actuals=n())\ncolnames(actuals)<- c(\"Date\",\"Bucket\",\"actuals\")\n\nactive=AllData %>% filter(Active ==1) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(active=n())\ncolnames(active)<- c(\"Date\",\"Bucket\",\"active\")\n\nScheduledbutNeverCame=AllData %>% filter(inActiveNotActuals ==1) %>% group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(ScheduledbutNeverCame=n())\ncolnames(ScheduledbutNeverCame)<- c(\"Date\",\"Bucket\",\"ScheduledbutNeverCame\")\n\nCamebutneverscheduled=AllData %>% filter(inActualNotActive ==1) %>%group_by(EVT_DT,Departure_Time_Bucket._act) %>% summarise(Camebutneverscheduled=n())\ncolnames(Camebutneverscheduled)<- c(\"Date\",\"Bucket\",\"Camebutneverscheduled\")\n\nScheduledTodayCameToday=AllData %>% filter(InBoth ==1 & DevianceInCalDates==0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(ScheduledTodayCameToday=n())\ncolnames(ScheduledTodayCameToday)<- c(\"Date\",\"Bucket\",\"ScheduledTodayCameToday\")\n\nsameBucket=AllData %>% filter(InBoth ==1 & DevianceInCalDates==0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(DevianceInBuckets = sum(DevianceInBuckets==0))\ncolnames(sameBucket)<- c(\"Date\",\"Bucket\",\"sameBucket\")\n\npreviousBucket=AllData %>% filter(InBoth ==1 & DevianceInCalDates==0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(DevianceInBuckets = sum(DevianceInBuckets>0))\ncolnames(previousBucket)<- c(\"Date\",\"Bucket\",\"previousBucket\")\n\nlaterBucket=AllData %>% filter(InBoth ==1 & DevianceInCalDates==0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(DevianceInBuckets = sum(DevianceInBuckets<0))\ncolnames(laterBucket)<- c(\"Date\",\"Bucket\",\"laterBucket\")\n\nScheduledTodaycamelater=AllData %>% filter(InBoth ==1 & DevianceInCalDates>0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(ScheduledTodaycamelater=n())\ncolnames(ScheduledTodaycamelater)<- c(\"Date\",\"Bucket\",\"ScheduledTodaycamelater\")\n\n\nScheduledTodayCameYesterday=AllData %>% filter(InBoth ==1 & DevianceInCalDates<0) %>%group_by(EST_DPT_DT,Departure_Time_Bucket._actv) %>% summarise(ScheduledTodayCameYesterday=n())\ncolnames(ScheduledTodayCameYesterday)<- c(\"Date\",\"Bucket\",\"ScheduledTodayCameYesterday\")\n\n# --------------------------------------------\n\nCameTodayScheduledEarlier=AllData %>% filter(InBoth ==1 & DevianceInBuckets>0) %>%group_by(EVT_DT,Departure_Time_Bucket._act) %>% summarise(CameTodayScheduledEarlier=n())\ncolnames(CameTodayScheduledEarlier)<- c(\"Date\",\"Bucket\",\"CameTodayScheduledEarlier\")\n\nCameTodayScheduledLater=AllData %>% filter(InBoth ==1 & DevianceInBuckets<0) %>%group_by(EVT_DT,Departure_Time_Bucket._act) %>% summarise(CameTodayScheduledLater=n())\ncolnames(CameTodayScheduledLater)<- c(\"Date\",\"Bucket\",\"CameTodayScheduledLater\")\n\n\nbaseDT <- sort(na.exclude(unique(AllData$EVT_DT)))\nbaseBkt <- na.exclude(unique(AllData$Departure_Time_Bucket._act))\nbase <- as.data.frame(expand.grid(baseDT, baseBkt))\ncolnames(base)<- c(\"Date\",\"Bucket\")\n\n\nactuals = merge(base, actuals, all.x = T)\nactive = merge(base, active, all.x = T)\nScheduledbutNeverCame = merge(base, ScheduledbutNeverCame, all.x = T)\nCamebutneverscheduled = merge(base, Camebutneverscheduled, all.x = T)\nScheduledTodayCameToday = merge(base, ScheduledTodayCameToday, all.x = T)\nsameBucket = merge(base, sameBucket, all.x = T)\npreviousBucket = merge(base, previousBucket, all.x = T)\nlaterBucket = merge(base, laterBucket, all.x = T)\nScheduledTodaycamelater = merge(base, ScheduledTodaycamelater, all.x = T)\nScheduledTodayCameYesterday = merge(base, ScheduledTodayCameYesterday, all.x = T)\nCameTodayScheduledEarlier = merge(base, CameTodayScheduledEarlier, all.x = T)\nCameTodayScheduledLater = merge(base, CameTodayScheduledLater, all.x = T)\n\n\nAddedRemovedTrains = merge(actuals, active, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, ScheduledbutNeverCame, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, Camebutneverscheduled, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, ScheduledTodayCameToday, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, sameBucket, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, previousBucket, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, laterBucket, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, ScheduledTodaycamelater, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, ScheduledTodayCameYesterday, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, CameTodayScheduledEarlier, all.x = T)\nAddedRemovedTrains = merge(AddedRemovedTrains, CameTodayScheduledLater, all.x = T)\n\n\n#Filter data wherever active is present - eg: for +3 we wont have first three days active data.\nAddedRemovedTrains <- AddedRemovedTrains[!is.na(AddedRemovedTrains$active),]\n\n\n#Early-Delayed Train Variables\nDelayed_Trains <- AllData %>% filter(InBoth ==1)\nhist(as.numeric(Delayed_Trains$DevianceInBuckets))\n# TODO:Try to automate the above\nsummary(as.factor(Delayed_Trains$DevianceInBuckets))\nDelayed_Trains$BKT_DEV_BKT <- cut(as.numeric(Delayed_Trains$DevianceInBuckets), breaks=c(-100,-1.5,-0.5,0.5,1.5,2.5,3.5,4.5,100), labels=c(\"<=-2\",\"-1\",\"0\",\"1\",\"2\",\"3\",\"4\",\">=5\"))\ntable(Delayed_Trains$BKT_DEV_BKT)\nDelayed_Trains <- Delayed_Trains[,c(\"EST_DPT_DT\", \"Departure_Time_Bucket._actv\", \"BKT_DEV_BKT\")]\nDelayed_Trains <- Delayed_Trains %>% group_by(EST_DPT_DT, Departure_Time_Bucket._actv, BKT_DEV_BKT) %>% summarise(count= n())\nDelayed_Trains<- spread(Delayed_Trains, BKT_DEV_BKT, count)\nDelayed_Trains[is.na(Delayed_Trains)] <- 0\ncolnames(Delayed_Trains) <- c(\"Date\",\"Bucket\", \"LTE_minus2_Early\", \"minus1_Early\", \"On_Time\",\n                              \"Plus1_Delay\", \"Plus2_Delay\", \"Plus3_Delay\",\n                              \"Plus4_Delay\", \"GTE_Plus5_Delay\" )\n\n#merging Delayed Train Variables\nAddedRemovedTrains = merge(AddedRemovedTrains, Delayed_Trains, all.x = T)\n\n\n\n#PRE-POST Train Variables\npre_post_Trains <- AllData %>% filter(InBoth ==1)\nhist(as.numeric(pre_post_Trains$DevianceInBuckets))\nsummary(as.factor(pre_post_Trains$DevianceInBuckets))\npre_post_Trains$BKT_DEV_BKT <- cut(as.numeric(pre_post_Trains$DevianceInBuckets), breaks=c(-100,-1.5,-0.5,0.5,1.5,2.5,3.5,4.5,100), labels=c(\"LTE_minus2_Pre\", \"Pre_minus1_Pre\", \"On_Time\",\n                                                                                                                                             \"Plus1_Post\", \"Plus2_Post\", \"Plus3_Post\",\n                                                                                                                                             \"Plus4_Post\", \"GTE_Plus5_Post\"))\ntable(pre_post_Trains$BKT_DEV_BKT)\npre_post_Trains <- pre_post_Trains[,c(\"EVT_DT\", \"Departure_Time_Bucket._act\", \"BKT_DEV_BKT\")]\npre_post_Trains <- pre_post_Trains %>% group_by(EVT_DT, Departure_Time_Bucket._act, BKT_DEV_BKT) %>% summarise(count= n())\npre_post_Trains<- spread(pre_post_Trains, BKT_DEV_BKT, count)\npre_post_Trains[is.na(pre_post_Trains)] <- 0\npre_post_Trains <- pre_post_Trains %>% select(-c(On_Time))\ncolnames(pre_post_Trains)[1:2] <- c(\"Date\", \"Bucket\")\n\n#merging pre-post Train Variables\nAddedRemovedTrains = merge(AddedRemovedTrains, pre_post_Trains, all.x = T)\n\n\n\n#######################################################################\n##############################Adding PREDICTORS########################\nPredictor_Variables <- AllData %>% filter(InBoth ==1)\n\n#Predictor - TYPE\ntable(Predictor_Variables$TRN_TYPE)\nPred_Type <- Predictor_Variables[,c(\"EST_DPT_DT\", \"Departure_Time_Bucket._actv\", \"TRN_TYPE\")]\nPred_Type <- Pred_Type %>% group_by(EST_DPT_DT, Departure_Time_Bucket._actv, TRN_TYPE) %>% summarise(count= n())\nPred_Type<- spread(Pred_Type, TRN_TYPE, count)\nPred_Type[is.na(Pred_Type)] <- 0\ncolnames(Pred_Type) <- paste0(\"TYPE_\",colnames(Pred_Type))\ncolnames(Pred_Type)[1] <- \"Date\"\ncolnames(Pred_Type)[2] <- \"Bucket\"\n#Merging Type predictor variables\nAddedRemovedTrains = merge(AddedRemovedTrains, Pred_Type, all.x = T)\n\n#Predictor - SYM\ntable(Predictor_Variables$TRN_SYM)\nPred_SYM <- Predictor_Variables[,c(\"EST_DPT_DT\", \"Departure_Time_Bucket._actv\", \"TRN_SYM\")]\nPred_SYM <- Pred_SYM %>% group_by(EST_DPT_DT, Departure_Time_Bucket._actv, TRN_SYM) %>% summarise(count= n())\nPred_SYM<- spread(Pred_SYM, TRN_SYM, count)\nPred_SYM[is.na(Pred_SYM)] <- 0\ncolnames(Pred_SYM) <- paste0(\"SYM_\",colnames(Pred_SYM))\ncolnames(Pred_SYM)[1] <- \"Date\"\ncolnames(Pred_SYM)[2] <- \"Bucket\"\n#Merging SYM predictor variables\nAddedRemovedTrains = merge(AddedRemovedTrains, Pred_SYM, all.x = T)\n\n#Predictor - PRIORITY\ntable(Predictor_Variables$TRN_PRTY)\nPred_PRTY <- Predictor_Variables[,c(\"EST_DPT_DT\", \"Departure_Time_Bucket._actv\", \"TRN_PRTY\")]\nPred_PRTY <- Pred_PRTY %>% group_by(EST_DPT_DT, Departure_Time_Bucket._actv, TRN_PRTY) %>% summarise(count= n())\nPred_PRTY<- spread(Pred_PRTY, TRN_PRTY, count)\nPred_PRTY[is.na(Pred_PRTY)] <- 0\ncolnames(Pred_PRTY) <- paste0(\"PRTY_\",colnames(Pred_PRTY))\ncolnames(Pred_PRTY)[1] <- \"Date\"\ncolnames(Pred_PRTY)[2] <- \"Bucket\"\n#Merging SYM predictor variables\nAddedRemovedTrains = merge(AddedRemovedTrains, Pred_PRTY, all.x = T)\n\n#Predictor - SECTION\ntable(Predictor_Variables$TRN_SECT)\nPred_SECT <- Predictor_Variables[,c(\"EST_DPT_DT\", \"Departure_Time_Bucket._actv\", \"TRN_SECT\")]\nPred_SECT <- Pred_SECT %>% group_by(EST_DPT_DT, Departure_Time_Bucket._actv, TRN_SECT) %>% summarise(count= n())\nPred_SECT<- spread(Pred_SECT, TRN_SECT, count)\nPred_SECT[is.na(Pred_SECT)] <- 0\ncolnames(Pred_SECT) <- paste0(\"SECT_\",colnames(Pred_SECT))\ncolnames(Pred_SECT)[1] <- \"Date\"\ncolnames(Pred_SECT)[2] <- \"Bucket\"\n#Merging SYM predictor variables\nAddedRemovedTrains = merge(AddedRemovedTrains, Pred_SECT, all.x = T)\n\n\n#Direction Variable\nEast=AllData %>% filter(Actual ==1, DPT_DIR=='E') %>%group_by(EVT_DT,Departure_Time_Bucket._act) %>% summarise(East_bound=n())\ncolnames(East)<- c(\"Date\",\"Bucket\",\"East_bound\")\n#Merging direction variables\nAddedRemovedTrains = merge(AddedRemovedTrains, East, all.x = T)\nAddedRemovedTrains$East_Ratio = AddedRemovedTrains$East_bound/AddedRemovedTrains$actuals\n\n\n# adding timeseries variable, ordering and replacing NAs by 0\na <- data.frame(\"Bucket\"=unique(AddedRemovedTrains$Bucket), \"hr\"= c(4,16,20,24,8,12))\nAddedRemovedTrains <- merge(AddedRemovedTrains,a)\nAddedRemovedTrains$TS_Bucket = as.POSIXct(paste(AddedRemovedTrains$Date, AddedRemovedTrains$hr),format=\"%Y-%m-%d%H\")\nAddedRemovedTrains <- AddedRemovedTrains[,c(336,2,1,3:334)]\nAddedRemovedTrains[is.na(AddedRemovedTrains)] <- 0\nAddedRemovedTrains <- AddedRemovedTrains[order(AddedRemovedTrains$TS_Bucket),]\n\nAddedRemovedTrains$weekday = weekdays(AddedRemovedTrains$Date)\nAddedRemovedTrains$Bucket  <- as.character(gsub(\"'\",\"BUCKET_\",AddedRemovedTrains$Bucket))\nAddedRemovedTrains$Bucket  <- as.character(gsub(\"-\",\"_\",AddedRemovedTrains$Bucket))\nAddedRemovedTrains$Bucket  <- as.character(gsub(\"0_4\",\"00_04\",AddedRemovedTrains$Bucket))\nAddedRemovedTrains$Bucket  <- as.character(gsub(\"4_8\",\"04_08\",AddedRemovedTrains$Bucket))\nAddedRemovedTrains$Bucket  <- as.character(gsub(\"8_12\",\"08_12\",AddedRemovedTrains$Bucket))\n\nsaveRDS(AddedRemovedTrains, paste0(dir,\"Proceesed_data_part2_3Day.RDS\"))\n\n\nwrite.csv(AddedRemovedTrains, paste0(dir,\"AddedRemovedTrains_3Day.csv\"))\n\n\n",
    "created" : 1495631213624.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4090274286",
    "id" : "8A8C03B9",
    "lastKnownWriteTime" : 1495631675,
    "last_content_update" : 1495631675951,
    "path" : "H:/Schedule Prediction/Needles Departure/Needles Departures/Needles_only_Code/+3 Day/Data_processing_Part2.R",
    "project_path" : "Needles_only_Code/+3 Day/Data_processing_Part2.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}